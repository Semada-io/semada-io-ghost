{"version":3,"sources":["jquery.visible.js"],"names":["$","$w","window","fn","visible","partial","hidden","direction","container","this","length","$t","eq","isContained","$c","wPosition","position","t","get","vpWidth","outerWidth","vpHeight","outerHeight","clientSize","offsetWidth","offsetHeight","getBoundingClientRect","rec","tViz","top","bViz","bottom","lViz","left","rViz","right","vVisible","hVisible","viewTop","viewBottom","viewLeft","scrollLeft","viewRight","_top","_bottom","height","_left","_right","width","compareTop","compareBottom","compareLeft","compareRight","jQuery"],"mappings":"CAAA,SAAUA,GAYN,IAAIC,EAAGD,EAAEE,QACTF,EAAEG,GAAGC,QAAU,SAASC,EAAQC,EAAOC,EAAUC,GAE7C,KAAIC,KAAKC,OAAS,GAAlB,CAIPH,EAAYA,GAAa,OAElB,IAAII,EAA4B,EAAdF,KAAKC,OAAaD,KAAKG,GAAG,GAAKH,KACnDI,EAAc,MAAOL,EACrBM,EAAUD,EAAcb,EAAEQ,GAAaP,EACvCc,EAAmBF,EAAcC,EAAGE,WAAa,EAC3CC,EAAcN,EAAGO,IAAI,GACrBC,EAAcL,EAAGM,aACjBC,EAAcP,EAAGQ,cACjBC,GAAyB,IAAXjB,GAAkBW,EAAEO,YAAcP,EAAEQ,aAEtD,GAAuC,mBAA5BR,EAAES,sBAAqC,CAG9C,IAAIC,EAAMV,EAAES,wBACRE,EAAOf,EACgB,GAA3Bc,EAAIE,IAAMd,EAAUc,KAAYF,EAAIE,IAAMR,EAAWN,EAAUc,IACpD,GAAXF,EAAIE,KAAYF,EAAIE,IAAMR,EACtBS,EAAOjB,EACkB,EAA7Bc,EAAII,OAAShB,EAAUc,KAAWF,EAAII,QAAUV,EAAWN,EAAUc,IACxD,EAAbF,EAAII,QAAcJ,EAAII,QAAUV,EAC5BW,EAAOnB,EACkB,GAA7Bc,EAAIM,KAAOlB,EAAUkB,MAAaN,EAAIM,KAAOd,EAAUJ,EAAUkB,KACrD,GAAZN,EAAIM,MAAaN,EAAIM,KAAQd,EACzBe,EAAOrB,EACkB,EAA7Bc,EAAIQ,MAAQpB,EAAUkB,MAAaN,EAAIQ,MAAQhB,EAAUJ,EAAUkB,KACvD,EAAZN,EAAIQ,OAAaR,EAAIQ,OAAShB,EAC1BiB,EAAa/B,EAAUuB,GAAQE,EAAOF,GAAQE,EAC9CO,EAAahC,EAAU2B,GAAQE,EAAOF,GAAQE,EAC5DE,EAAYT,EAAIE,IAAM,GAAKF,EAAII,OAASV,GAAmBe,EAC7CC,EAAYV,EAAIM,KAAO,GAAKN,EAAIQ,MAAQhB,GAAkBkB,EAE9D,GAAiB,SAAd9B,EACC,OAAOgB,GAAca,GAAYC,EAChC,GAAiB,aAAd9B,EACJ,OAAOgB,GAAca,EACpB,GAAiB,eAAd7B,EACJ,OAAOgB,GAAcc,MACtB,CAEH,IAAIC,EAAczB,EAAc,EAAIE,EAChCwB,EAAkBD,EAAUjB,EAC5BmB,EAAkB1B,EAAG2B,aACrBC,EAAkBF,EAAWrB,EAC7BH,EAAoBL,EAAGK,WACvB2B,EAAkB3B,EAASa,IAC3Be,EAAkBD,EAAOhC,EAAGkC,SAC5BC,EAAkB9B,EAASiB,KAC3Bc,EAAkBD,EAAQnC,EAAGqC,QAC7BC,GAA8B,IAAZ5C,EAAmBuC,EAAUD,EAC/CO,GAA8B,IAAZ7C,EAAmBsC,EAAOC,EAC5CO,GAA8B,IAAZ9C,EAAmB0C,EAASD,EAC9CM,GAA8B,IAAZ/C,EAAmByC,EAAQC,EAEjD,GAAiB,SAAdxC,EACC,QAASgB,GAAgB2B,GAAiBX,GAA8BD,GAAdW,GAA6BG,GAAgBV,GAA8BF,GAAfW,EACrH,GAAiB,aAAd5C,EACJ,QAASgB,GAAgB2B,GAAiBX,GAA8BD,GAAdW,EACzD,GAAiB,eAAd1C,EACJ,QAASgB,GAAgB6B,GAAgBV,GAA8BF,GAAfW,KA9ExE,CAkFGE","file":"jquery.visible.js","sourcesContent":["(function($){\n\n    /**\n     * Copyright 2012, Digital Fusion\n     * Licensed under the MIT license.\n     * http://teamdf.com/jquery-plugins/license/\n     *\n     * @author Sam Sehnert\n     * @desc A small plugin that checks whether elements are within\n     *       the user visible viewport of a web browser.\n     *       can accounts for vertical position, horizontal, or both\n     */\n    var $w=$(window);\n    $.fn.visible = function(partial,hidden,direction,container){\n\n        if (this.length < 1)\n            return;\n\t\n\t// Set direction default to 'both'.\n\tdirection = direction || 'both';\n\t    \n        var $t          = this.length > 1 ? this.eq(0) : this,\n\t\t\t\t\t\tisContained = typeof container !== 'undefined' && container !== null,\n\t\t\t\t\t\t$c\t\t\t\t  = isContained ? $(container) : $w,\n\t\t\t\t\t\twPosition        = isContained ? $c.position() : 0,\n            t           = $t.get(0),\n            vpWidth     = $c.outerWidth(),\n            vpHeight    = $c.outerHeight(),\n            clientSize  = hidden === true ? t.offsetWidth * t.offsetHeight : true;\n\n        if (typeof t.getBoundingClientRect === 'function'){\n\n            // Use this native browser method, if available.\n            var rec = t.getBoundingClientRect(),\n                tViz = isContained ?\n\t\t\t\t\t\t\t\t\t\t\t\trec.top - wPosition.top >= 0 && rec.top < vpHeight + wPosition.top :\n\t\t\t\t\t\t\t\t\t\t\t\trec.top >= 0 && rec.top < vpHeight,\n                bViz = isContained ?\n\t\t\t\t\t\t\t\t\t\t\t\trec.bottom - wPosition.top > 0 && rec.bottom <= vpHeight + wPosition.top :\n\t\t\t\t\t\t\t\t\t\t\t\trec.bottom > 0 && rec.bottom <= vpHeight,\n                lViz = isContained ?\n\t\t\t\t\t\t\t\t\t\t\t\trec.left - wPosition.left >= 0 && rec.left < vpWidth + wPosition.left :\n\t\t\t\t\t\t\t\t\t\t\t\trec.left >= 0 && rec.left <  vpWidth,\n                rViz = isContained ?\n\t\t\t\t\t\t\t\t\t\t\t\trec.right - wPosition.left > 0  && rec.right < vpWidth + wPosition.left  :\n\t\t\t\t\t\t\t\t\t\t\t\trec.right > 0 && rec.right <= vpWidth,\n                vVisible   = partial ? tViz || bViz : tViz && bViz,\n                hVisible   = partial ? lViz || rViz : lViz && rViz,\n\t\tvVisible = (rec.top < 0 && rec.bottom > vpHeight) ? true : vVisible,\n                hVisible = (rec.left < 0 && rec.right > vpWidth) ? true : hVisible;\n\n            if(direction === 'both')\n                return clientSize && vVisible && hVisible;\n            else if(direction === 'vertical')\n                return clientSize && vVisible;\n            else if(direction === 'horizontal')\n                return clientSize && hVisible;\n        } else {\n\n            var viewTop \t\t\t\t= isContained ? 0 : wPosition,\n                viewBottom      = viewTop + vpHeight,\n                viewLeft        = $c.scrollLeft(),\n                viewRight       = viewLeft + vpWidth,\n                position          = $t.position(),\n                _top            = position.top,\n                _bottom         = _top + $t.height(),\n                _left           = position.left,\n                _right          = _left + $t.width(),\n                compareTop      = partial === true ? _bottom : _top,\n                compareBottom   = partial === true ? _top : _bottom,\n                compareLeft     = partial === true ? _right : _left,\n                compareRight    = partial === true ? _left : _right;\n\n            if(direction === 'both')\n                return !!clientSize && ((compareBottom <= viewBottom) && (compareTop >= viewTop)) && ((compareRight <= viewRight) && (compareLeft >= viewLeft));\n            else if(direction === 'vertical')\n                return !!clientSize && ((compareBottom <= viewBottom) && (compareTop >= viewTop));\n            else if(direction === 'horizontal')\n                return !!clientSize && ((compareRight <= viewRight) && (compareLeft >= viewLeft));\n        }\n    };\n\n})(jQuery);"],"sourceRoot":"/source/"}